name: Build-OpenWrt

on:
  push:
    branches: 
      - master
#  release:
#    types: published
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: started
#  repository_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
#    timeout-minutes: 360

    steps:
    - name: Clone Repository
      uses: actions/checkout@v3
    - name: Init Compilation Dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq full-upgrade
        sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
        for i in $(ls /usr/bin/*-8); do sudo -E ln -sf $i ${i%%-8*}; done 
        sudo -E ln -sf /usr/include/asm-generic /usr/include/asm
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo -E swapoff -a
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /usr/local/lib/android /opt/ghc /swapfile
    - name: Clone Source
      run: |
        cd /home/runner
        bash ${GITHUB_WORKSPACE}/clone_source.sh
        sudo chown -R runner:runner lede
    - name: Before Build
      run: |
        /bin/bash ${GITHUB_WORKSPACE}/before_build.sh
        cp -fpR ${GITHUB_WORKSPACE}/. /home/runner/lede/

#    - name: SSH connection to Actions
#      uses: csexton/debugger-action@master

    - name: Start Build
      run: | 
        cd /home/runner/lede
        mv .config .config_default
        rm -f .config.old
        config_names="$(ls .config*)"
        for i in $config_names;do mv -f $i .config; make defconfig; make -j$[$(nproc)+1]; rm -rf build_dir/target* build_dir/toolchain* staging_dir/target* staging_dir/toolchain*; done
    - name: After Build
      run: |
        /bin/bash /home/runner/lede/after_build.sh
    - name: Upload Packages
      uses: actions/upload-artifact@v3
      with:
        name: Packages
        path: /home/runner/lede/bin/packages/
    - name: Upload Firmwares
      uses: actions/upload-artifact@v3
      with:
        name: Firmwares
        path: /home/runner/lede/bin/targets/
